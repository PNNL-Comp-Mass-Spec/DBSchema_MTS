/****** Object:  Table [T_SP_Glossary] ******/
/****** RowCount: 479 ******/
/****** Columns: SP_ID, Column_Name, Direction_ID, Ordinal_Position, Data_Type_Name, Field_Length, Description ******/
INSERT INTO [T_SP_Glossary] VALUES (1,'IncludeUnused',1,2,'tinyint',1,'If True, then Unused databases are included.')
INSERT INTO [T_SP_Glossary] VALUES (1,'IncludeDeleted',1,3,'tinyint',1,'If True, then deleted databases are included.')
INSERT INTO [T_SP_Glossary] VALUES (1,'ServerFilter',1,4,'varchar',128,'Server name to filter on.')
INSERT INTO [T_SP_Glossary] VALUES (1,'VerboseColumnOutput',1,5,'tinyint',1,'')
INSERT INTO [T_SP_Glossary] VALUES (1,'message',2,1,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (1,'Server Name',3,1,'varchar',128,'Server the DB resides on')
INSERT INTO [T_SP_Glossary] VALUES (1,'DB Name',3,2,'varchar',128,'Database name.')
INSERT INTO [T_SP_Glossary] VALUES (1,'Description',3,3,'varchar',2048,'Database description.')
INSERT INTO [T_SP_Glossary] VALUES (1,'Organism',3,4,'varchar',64,'Organism associated with the given database.')
INSERT INTO [T_SP_Glossary] VALUES (1,'Campaign',3,5,'varchar',64,'Campaign name associated with the given database.')
INSERT INTO [T_SP_Glossary] VALUES (1,'State',3,6,'varchar',50,'Database state')
INSERT INTO [T_SP_Glossary] VALUES (1,'Created',3,7,'smalldatetime',4,'Creation date for the database.')
INSERT INTO [T_SP_Glossary] VALUES (1,'Last Update',3,8,'smalldatetime',4,'Date that the statistics were last updated.')
INSERT INTO [T_SP_Glossary] VALUES (2,'ConfigurationSettingsOnly',1,1,'varchar',32,'If 1, then only configuration settings should be displayed for the given database.')
INSERT INTO [T_SP_Glossary] VALUES (2,'ConfigurationCrosstabMode',1,2,'varchar',32,'If 1, then the results should be displayed in a crosstab format.')
INSERT INTO [T_SP_Glossary] VALUES (2,'DBNameFilter',1,3,'varchar',2048,'Like-clause compatible name to filter the databases on.  For example: MT_Human%')
INSERT INTO [T_SP_Glossary] VALUES (2,'IncludeUnused',1,4,'varchar',32,'')
INSERT INTO [T_SP_Glossary] VALUES (2,'ServerFilter',1,6,'varchar',128,'')
INSERT INTO [T_SP_Glossary] VALUES (2,'message',2,5,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Database Name',3,1,'varchar',128,'Database name')
INSERT INTO [T_SP_Glossary] VALUES (2,'Server Name',3,2,'varchar',128,'Server name')
INSERT INTO [T_SP_Glossary] VALUES (2,'Category',3,3,'varchar',128,'Category for the given statistic.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Label',3,4,'varchar',128,'Label for the given statistic.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Value',3,5,'varchar',128,'Statistic for the given category and label.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Database Campaign',3,6,'varchar',255,'Campaign name associated with the given database.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Organism',3,7,'varchar',128,'Organism associated with the given database.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Peptide DB',3,8,'varchar',255,'Peptide database(s) associated with the given PMT tag database.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Protein DB',3,9,'varchar',255,'Protein database(s) associated with the given PMT tag database.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Organism DB Files',3,10,'varchar',255,'Organism database files (FASTA files) associated with the given database.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Parameter Files',3,11,'varchar',255,'MS/MS search parameter files associated with the given database.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Setting Files',3,12,'varchar',255,'MS/MS search settings files associated with the given database.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Separation Types',3,13,'varchar',255,'Allowed LC separation types.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Experiments',3,14,'varchar',255,'Experiment clause used to filter datasets for the given database.')
INSERT INTO [T_SP_Glossary] VALUES (2,'State',3,15,'varchar',50,'Database state')
INSERT INTO [T_SP_Glossary] VALUES (2,'Last Update',3,16,'datetime',8,'Date that the statistics were last updated.')
INSERT INTO [T_SP_Glossary] VALUES (2,'Database Description',3,17,'varchar',2048,'Database description')
INSERT INTO [T_SP_Glossary] VALUES (3,'IncludeUnused',1,2,'tinyint',1,'If True, then Unused databases are included.')
INSERT INTO [T_SP_Glossary] VALUES (3,'IncludeDeleted',1,3,'tinyint',1,'If True, then deleted databases are included.')
INSERT INTO [T_SP_Glossary] VALUES (3,'ServerFilter',1,4,'varchar',128,'')
INSERT INTO [T_SP_Glossary] VALUES (3,'VerboseColumnOutput',1,5,'tinyint',1,'')
INSERT INTO [T_SP_Glossary] VALUES (3,'message',2,1,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (3,'Name',3,1,'varchar',128,'Database name')
INSERT INTO [T_SP_Glossary] VALUES (3,'Description',3,2,'varchar',2048,'Database description.')
INSERT INTO [T_SP_Glossary] VALUES (3,'Organism',3,3,'varchar',64,'Organism associated with the given database.')
INSERT INTO [T_SP_Glossary] VALUES (3,'State',3,4,'varchar',50,'Database state')
INSERT INTO [T_SP_Glossary] VALUES (3,'Created',3,5,'datetime',8,'Creation date for the database.')
INSERT INTO [T_SP_Glossary] VALUES (3,'Last Update',3,6,'datetime',8,'Date that the statistics were last updated.')
INSERT INTO [T_SP_Glossary] VALUES (4,'ConfigurationSettingsOnly',1,1,'varchar',32,'If 1, then only configuration settings should be displayed for the given database.')
INSERT INTO [T_SP_Glossary] VALUES (4,'ConfigurationCrosstabMode',1,2,'varchar',32,'If 1, then the results should be displayed in a crosstab format.')
INSERT INTO [T_SP_Glossary] VALUES (4,'DBNameFilter',1,3,'varchar',2048,'Like-clause compatible name to filter the databases on.  For example: PT_Human%')
INSERT INTO [T_SP_Glossary] VALUES (4,'IncludeUnused',1,4,'varchar',32,'If True, then Unused databases are included.')
INSERT INTO [T_SP_Glossary] VALUES (4,'ServerFilter',1,6,'varchar',128,'')
INSERT INTO [T_SP_Glossary] VALUES (4,'message',2,5,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (4,'Database Name',3,1,'varchar',128,'Database name')
INSERT INTO [T_SP_Glossary] VALUES (4,'Server Name',3,2,'varchar',128,'Server name')
INSERT INTO [T_SP_Glossary] VALUES (4,'Category',3,3,'varchar',128,'Category for the given statistic.')
INSERT INTO [T_SP_Glossary] VALUES (4,'Label',3,4,'varchar',128,'Label for the given statistic.')
INSERT INTO [T_SP_Glossary] VALUES (4,'Value',3,5,'varchar',128,'Statistic for the given category and label.')
INSERT INTO [T_SP_Glossary] VALUES (4,'Organism',3,6,'varchar',128,'Organism associated with the given database.')
INSERT INTO [T_SP_Glossary] VALUES (4,'Organism DB Files',3,7,'varchar',255,'Organism database files (FASTA files) associated with the given database.')
INSERT INTO [T_SP_Glossary] VALUES (4,'Peptide Import Filters',3,8,'varchar',255,'Filter set IDs used when importing peptide results.')
INSERT INTO [T_SP_Glossary] VALUES (4,'MTDB Export Filters',3,9,'varchar',255,'Filter set IDs used when exporting peptide results.')
INSERT INTO [T_SP_Glossary] VALUES (4,'State',3,10,'varchar',50,'Database state')
INSERT INTO [T_SP_Glossary] VALUES (4,'Last Update',3,11,'datetime',8,'Date that the statistics were last updated.')
INSERT INTO [T_SP_Glossary] VALUES (4,'Database Description',3,12,'varchar',2048,'Databse description')
INSERT INTO [T_SP_Glossary] VALUES (5,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (5,'outputColumnNameList',1,2,'varchar',2048,'Comma separated list of column names to limit the output to. If blank, then all columns are included.')
INSERT INTO [T_SP_Glossary] VALUES (5,'criteriaSql',1,3,'varchar',6000,'Sql "Where clause compatible" text for filtering the ResultSet. For example: "Protein_Monoisotopic_Mass < 10000".  This parameter can contain Protein_Name criteria, but the @criteriaSQL text will get AND''d with the @Proteins parameter, if it is defined')
INSERT INTO [T_SP_Glossary] VALUES (5,'returnRowCount',1,4,'varchar',32,'Set to True to return the row count, false to return the data.')
INSERT INTO [T_SP_Glossary] VALUES (5,'Proteins',1,6,'varchar',7000,'Comma separated list of protein names to filter on or list of protein match criteria containing a wildcard character (%) to filter on.  For example: ''Protein1003, Protein1005, Protein1006'' or ''Protein100%'' or ''Protein1003, Protein1005, Protein100%''')
INSERT INTO [T_SP_Glossary] VALUES (5,'message',2,5,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (5,'ProteinDBDefined',2,7,'varchar',32,'Set to True if a Protein database is defined for this PMT tag database, False if not.')
INSERT INTO [T_SP_Glossary] VALUES (5,'Protein_Name',3,1,'varchar',128,'Protein identification text')
INSERT INTO [T_SP_Glossary] VALUES (5,'Protein_Description',3,2,'varchar',128,'Description for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (5,'Protein_Location_Start',3,3,'int',4,'Starting location in the organism''s DNA at which the given protein sequence starts.')
INSERT INTO [T_SP_Glossary] VALUES (5,'Protein_Location_Stop',3,4,'int',4,'Ending location in the organism''s DNA at which the given protein sequence starts.')
INSERT INTO [T_SP_Glossary] VALUES (5,'Protein_Monoisotopic_Mass',3,5,'float',8,'Uncharged mass of the protein.')
INSERT INTO [T_SP_Glossary] VALUES (5,'Protein_Sequence',3,6,'text',16,'Protein sequence')
INSERT INTO [T_SP_Glossary] VALUES (6,'message',2,1,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (6,'Column_Name',3,1,'varchar',255,'Name of the output column.')
INSERT INTO [T_SP_Glossary] VALUES (6,'Data_Type',3,2,'varchar',255,'Data type of the output column.')
INSERT INTO [T_SP_Glossary] VALUES (8,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (8,'pepIdentMethod',1,2,'varchar',32,'Identification method to use for returning results.  DBSearch(MS/MS-LCQ) or UMCPeakMatch(MS-FTICR)')
INSERT INTO [T_SP_Glossary] VALUES (8,'outputColumnNameList',1,3,'varchar',1024,'Comma separated list of column names to limit the output to. If blank, then all columns are included.')
INSERT INTO [T_SP_Glossary] VALUES (8,'message',2,4,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (8,'Experiment',3,1,'varchar',50,'Experiment name')
INSERT INTO [T_SP_Glossary] VALUES (8,'Sel',3,2,'int',4,'Column required by the web page generator to allow the user to select Q Rollups to work with.')
INSERT INTO [T_SP_Glossary] VALUES (8,'Exp Reason',3,3,'varchar',500,'Reason experiment was conducted.')
INSERT INTO [T_SP_Glossary] VALUES (8,'Exp Comment',3,4,'varchar',500,'Comment associated with the experiment')
INSERT INTO [T_SP_Glossary] VALUES (8,'Campaign',3,5,'varchar',50,'Campaign name for the given experiment.')
INSERT INTO [T_SP_Glossary] VALUES (8,'Organism',3,6,'varchar',50,'Organism associated with the given experiment.')
INSERT INTO [T_SP_Glossary] VALUES (8,'Cell Cultures',3,7,'varchar',1024,'Cell cultures for the given experiment.')
INSERT INTO [T_SP_Glossary] VALUES (11,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (11,'outputColumnNameList',1,2,'varchar',2048,'Comma separated list of column names to limit the output to. If blank, then all columns are included.')
INSERT INTO [T_SP_Glossary] VALUES (11,'criteriaSql',1,3,'varchar',6000,'Sql "Where clause compatible" text for filtering the ResultSet.  For example: "Protein_Name Like ''DR2%'' And (MSMS_High_Normalized_Score >= 5 Or MSMS_Observation_Count >= 10)".  Although this parameter can contain Protein_Name criteria, it is better to filter for Proteins using the @Proteins parameter.')
INSERT INTO [T_SP_Glossary] VALUES (11,'returnRowCount',1,4,'varchar',32,'Set to True to return the row count, false to return the data.')
INSERT INTO [T_SP_Glossary] VALUES (11,'pepIdentMethod',1,6,'varchar',32,'Identification method to use for returning results.  DBSearch(MS/MS-LCQ) or UMCPeakMatch(MS-FTICR)')
INSERT INTO [T_SP_Glossary] VALUES (11,'Experiments',1,7,'varchar',7000,'Comma separated list of experiments to filter on or list of experiment match criteria containing a wildcard character (%) to filter on.  Names do not need single quotes around them; see @Proteins parameter for examples.')
INSERT INTO [T_SP_Glossary] VALUES (11,'Proteins',1,8,'varchar',7000,'Comma separated list of protein names to filter on or list of protein match criteria containing a wildcard character (%) to filter on.  For example: ''Protein1003, Protein1005, Protein1006'' or ''Protein100%'' or ''Protein1003, Protein1005, Protein100%''')
INSERT INTO [T_SP_Glossary] VALUES (11,'maximumRowCount',1,9,'int',4,'Maximum number of rows to return.')
INSERT INTO [T_SP_Glossary] VALUES (11,'includeSupersededData',1,10,'varchar',32,'If True, then results from superseded peak matching tasks are included.  Only applicable for method UMCPeakMatch(MS-FTICR).')
INSERT INTO [T_SP_Glossary] VALUES (11,'minimumPMTQualityScore',1,11,'float',8,'Minimum Quality Score required of PMTs used in peak matching (Scale 0-2, higher value means higher quality).')
INSERT INTO [T_SP_Glossary] VALUES (11,'message',2,5,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (11,'Experiment',3,1,'varchar',64,'Experiment name that given PMT was identified in.')
INSERT INTO [T_SP_Glossary] VALUES (11,'Protein_Name',3,2,'varchar',128,'Protein identification text')
INSERT INTO [T_SP_Glossary] VALUES (11,'Mass_Tag_ID',3,3,'int',4,'Unique integer identification number for the given PMT (peptide).')
INSERT INTO [T_SP_Glossary] VALUES (11,'Mass_Tag_Name',3,4,'varchar',255,'Description of the location of the given PMT in the associated protein.')
INSERT INTO [T_SP_Glossary] VALUES (11,'Peptide_Sequence',3,5,'varchar',850,'Sequence of amino acids conteined in matching mass tag, sans preceding and subsequent amino acids')
INSERT INTO [T_SP_Glossary] VALUES (11,'Peptide_Monoisotopic_Mass',3,6,'float',8,'Sum of naturally occuring isotope mass values contained in amino acid sequence')
INSERT INTO [T_SP_Glossary] VALUES (11,'MSMS_Observation_Count',3,7,'int',4,'Number of filter passing MSMS observations for the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (11,'MSMS_High_Normalized_Score',3,8,'real',4,'Highest cross correlational value (XCorr) of the MSMS observations for the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (11,'MSMS_High_Discriminant_Score',3,9,'real',4,'Highest discriminant score computed for the MSMS observations for the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (11,'Mod_Count',3,10,'int',4,'Number of modified amino acids in the peptide sequence')
INSERT INTO [T_SP_Glossary] VALUES (11,'Mod_Description',3,11,'varchar',2048,'Type of modifications on the amino acids of the peptide sequence for the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (11,'PMT_Quality_Score',3,12,'numeric',5,'Minimum Quality Score required for PMT match (Scale 0-2, higher value means higher quality).')
INSERT INTO [T_SP_Glossary] VALUES (11,'Cleavage_State_Name',3,13,'varchar',50,'The enzymatic cleavage state for the given PMT, in the context of the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (11,'Residue_Start',3,14,'int',4,'Position of the first amino acid in the protein sequence')
INSERT INTO [T_SP_Glossary] VALUES (11,'Residue_End',3,15,'int',4,'Position of the last amino acid in the protein sequence')
INSERT INTO [T_SP_Glossary] VALUES (11,'Dataset_Count',3,16,'int',4,'Number of datasets (for this Q Rollup) in which the given PMT was observed.')
INSERT INTO [T_SP_Glossary] VALUES (11,'Job_Count',3,17,'int',4,'Number of MS/MS analyses that the given PMT was observed in.')
INSERT INTO [T_SP_Glossary] VALUES (13,'pepIdentMethod',1,2,'varchar',32,'Identification method to use for returning results.  DBSearch(MS/MS-LCQ) or UMCPeakMatch(MS-FTICR)')
INSERT INTO [T_SP_Glossary] VALUES (13,'message',2,1,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (13,'Column_Name',3,1,'varchar',255,'Name of the output column.')
INSERT INTO [T_SP_Glossary] VALUES (13,'Data_Type',3,2,'varchar',255,'Data type of the output column.')
INSERT INTO [T_SP_Glossary] VALUES (14,'message',2,1,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (14,'Name',3,1,'varchar',32,'Name for the given peptide identification method.')
INSERT INTO [T_SP_Glossary] VALUES (14,'Code',3,2,'varchar',32,'Code for the given peptide identification method.')
INSERT INTO [T_SP_Glossary] VALUES (17,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (17,'Experiments',1,2,'varchar',7000,'Comma separated list of experiments to filter on or list of experiment match criteria containing a wildcard character (%) to filter on.  Names do not need single quotes around them.')
INSERT INTO [T_SP_Glossary] VALUES (17,'aggregation',1,3,'varchar',24,'Aggregation method.  For example: Sum_XCorr')
INSERT INTO [T_SP_Glossary] VALUES (17,'mode',1,4,'varchar',32,'Type of cross tab to return: Crosstab_Report, Preview_Data_Analysis_Jobs, Preview_Experiments, Preview_Proteins')
INSERT INTO [T_SP_Glossary] VALUES (17,'message',2,5,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (17,'Reference',3,1,'varchar',128,'Protein identification text')
INSERT INTO [T_SP_Glossary] VALUES (17,'Monoisotopic_Mass',3,2,'float',8,'Uncharged mass of the PMT.')
INSERT INTO [T_SP_Glossary] VALUES (18,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (18,'outputColumnNameList',1,2,'varchar',2048,'Comma separated list of column names to limit the output to. If blank, then all columns are included.')
INSERT INTO [T_SP_Glossary] VALUES (18,'criteriaSql',1,3,'varchar',6000,'Sql "Where clause compatible" text for filtering the ResultSet.  For example: "Mass_Tag_Count >= 5 Or Dataset_Count >= 3".  Although this parameter can contain Protein_Name criteria, it is better to filter for Proteins using the @Proteins parameter')
INSERT INTO [T_SP_Glossary] VALUES (18,'returnRowCount',1,4,'varchar',32,'Set to True to return the row count, false to return the data.')
INSERT INTO [T_SP_Glossary] VALUES (18,'pepIdentMethod',1,6,'varchar',32,'Identification method to use for returning results.  DBSearch(MS/MS-LCQ) or UMCPeakMatch(MS-FTICR)')
INSERT INTO [T_SP_Glossary] VALUES (18,'Experiments',1,7,'varchar',7000,'Comma separated list of experiments to filter on or list of experiment match criteria containing a wildcard character (%) to filter on.  Names do not need single quotes around them; see @Proteins parameter for examples.')
INSERT INTO [T_SP_Glossary] VALUES (18,'Proteins',1,8,'varchar',7000,'Comma separated list of protein names to filter on or list of protein match criteria containing a wildcard character (%) to filter on.  For example: ''Protein1003, Protein1005, Protein1006'' or ''Protein100%'' or ''Protein1003, Protein1005, Protein100%''')
INSERT INTO [T_SP_Glossary] VALUES (18,'maximumRowCount',1,9,'int',4,'Maximum number of rows to return.')
INSERT INTO [T_SP_Glossary] VALUES (18,'includeSupersededData',1,10,'varchar',32,'If True, then results from superseded peak matching tasks are included.  Only applicable for method UMCPeakMatch(MS-FTICR).')
INSERT INTO [T_SP_Glossary] VALUES (18,'minimumPMTQualityScore',1,11,'float',8,'Minimum Quality Score required of PMTs used in peak matching (Scale 0-2, higher value means higher quality).')
INSERT INTO [T_SP_Glossary] VALUES (18,'message',2,5,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (18,'Experiment',3,1,'varchar',64,'Experiment name that the given protein was identified in.')
INSERT INTO [T_SP_Glossary] VALUES (18,'Protein_Name',3,2,'varchar',128,'Protein identification text')
INSERT INTO [T_SP_Glossary] VALUES (18,'Mass_Tag_Count',3,3,'int',4,'Number of mass tags seen')
INSERT INTO [T_SP_Glossary] VALUES (18,'MSMS_Observation_Count_Avg',3,4,'int',4,'Average number of filter passing MSMS observations for the peptides associated with the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (18,'MSMS_High_Normalized_Score_Avg',3,5,'decimal',5,'Average highest cross correlational value (XCorr) of the MSMS observations for the peptides associated with the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (18,'MSMS_High_Discriminant_Score_Avg',3,6,'decimal',5,'Average highest discriminant score, based on the discriminant scores for the peptides associated with the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (18,'Mod_Count_Avg',3,7,'float',8,'Average number of modified amino acids in the peptide sequences for the peptides associated with this protein.')
INSERT INTO [T_SP_Glossary] VALUES (18,'Dataset_Count_Avg',3,8,'int',4,'Average number of datasets (for this Q Rollup) in which the PMTs for the given protein were observed.')
INSERT INTO [T_SP_Glossary] VALUES (18,'Job_Count_Avg',3,9,'int',4,'Average number of MS/MS analyses in which the peptides associated with the given protein were observed.')
INSERT INTO [T_SP_Glossary] VALUES (20,'MTDBName',1,1,'varchar',128,'Database from which to obtain the Q Rollup report(s).')
INSERT INTO [T_SP_Glossary] VALUES (20,'ShowSuperseded',1,2,'tinyint',1,'If 1, then will include Q Rollups with Quantitation_State_ = 5')
INSERT INTO [T_SP_Glossary] VALUES (20,'outputColumnNameList',1,3,'varchar',1024,'Comma separated list of column names to limit the output to. If blank, then all columns are included.')
INSERT INTO [T_SP_Glossary] VALUES (20,'QuantitationIDList',1,4,'varchar',1024,'Comma separated list of Quantitation_ID report IDs to return; may contain just one value.')
INSERT INTO [T_SP_Glossary] VALUES (20,'message',2,5,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (20,'Quantitation_ID',3,1,'int',4,'Index from T_Quantitation_Description')
INSERT INTO [T_SP_Glossary] VALUES (20,'Quantitation_State',3,2,'tinyint',1,'State number representing new, proccessing, sucess, or failure - See T_Quantitation_State_Name')
INSERT INTO [T_SP_Glossary] VALUES (20,'MD_ID',3,3,'int',4,'Unique integer identifier for the peak matching task.')
INSERT INTO [T_SP_Glossary] VALUES (20,'Job',3,4,'int',4,'Job Number; Index ID used for tracking')
INSERT INTO [T_SP_Glossary] VALUES (20,'Dataset',3,5,'varchar',128,'Name of dataset created at the time of mass spec run')
INSERT INTO [T_SP_Glossary] VALUES (20,'Experiment',3,6,'varchar',64,'Name of experiment to which the current dataset belongs')
INSERT INTO [T_SP_Glossary] VALUES (20,'Instrument_Class',3,7,'varchar',32,'Class name (LCQ or FTICR)')
INSERT INTO [T_SP_Glossary] VALUES (20,'Parameter_File_Name',3,8,'varchar',255,'Name of the parameter file containing the settings used for deisotoping')
INSERT INTO [T_SP_Glossary] VALUES (20,'Ini_File_Name',3,9,'varchar',255,'Name of ini file containing the settings used for peak matching')
INSERT INTO [T_SP_Glossary] VALUES (20,'Job_Completed',3,10,'smalldatetime',4,'Date and time job was completed')
INSERT INTO [T_SP_Glossary] VALUES (20,'Dataset_Created_DMS',3,11,'smalldatetime',4,'Date and time the dataset was created')
INSERT INTO [T_SP_Glossary] VALUES (21,'MTDBName',1,1,'varchar',128,'Database from which to obtain the Q Rollup report(s).')
INSERT INTO [T_SP_Glossary] VALUES (21,'ShowSuperseded',1,2,'tinyint',1,'If 1, then will include Q Rollups with Quantitation_State_ = 5')
INSERT INTO [T_SP_Glossary] VALUES (21,'outputColumnNameList',1,3,'varchar',1024,'Columns to include in the output -- ignored.')
INSERT INTO [T_SP_Glossary] VALUES (21,'message',2,4,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (21,'QID',3,1,'int',4,'Q Rollup report ID')
INSERT INTO [T_SP_Glossary] VALUES (21,'Sel',3,2,'int',4,'Column required by the web page generator to allow the user to select Q Rollups to work with.')
INSERT INTO [T_SP_Glossary] VALUES (21,'Sample Name',3,3,'varchar',255,'Name of sample')
INSERT INTO [T_SP_Glossary] VALUES (21,'Comment',3,4,'varchar',255,'Comment for the given Q Rollup report.')
INSERT INTO [T_SP_Glossary] VALUES (21,'Results Folder Path',3,5,'varchar',255,'Location of results folder; server path')
INSERT INTO [T_SP_Glossary] VALUES (21,'Unique Mass Tag Count',3,6,'int',4,'Unique number of PMTs (peptides) identified in the given Q rollup.')
INSERT INTO [T_SP_Glossary] VALUES (21,'Comparison Mass Tag Count',3,7,'int',4,'Number of PMTs that the UMCs were compared against in the peak matching task(s) included in the given Q Rollup.  If more than one peak matching task is rolled up, then this is an average for all tasks included, though the number of PMTs used will typically be the same for all tasks included in a single rollup.')
INSERT INTO [T_SP_Glossary] VALUES (21,'Threshold % For Inclusion',3,8,'decimal',5,'Decimal value to multiply the abundance value of the most abundant peptide for each protein by when determining the cutoff to use for choosing peptides to average together to compute average protein abundances.  Typically 0.33')
INSERT INTO [T_SP_Glossary] VALUES (21,'Normalize',3,9,'tinyint',1,'If 1, then the peptide abundances are scaled to give values roughly between 0.01 and 100.    Scaling is performed using ScaledAbu = (Abu-Minimum) / (Maximum-Minimum) * 100')
INSERT INTO [T_SP_Glossary] VALUES (21,'Std Abu Min',3,10,'float',8,'Minimum value to use when scaling the peptide abundances.  Scaling is performed using ScaledAbu = (Abu-Minimum) / (Maximum-Minimum) * 100')
INSERT INTO [T_SP_Glossary] VALUES (21,'Std Abu Max',3,11,'float',8,'Maximum value to use when scaling the peptide abundances.')
INSERT INTO [T_SP_Glossary] VALUES (21,'Force Peak Max Abundance',3,12,'tinyint',1,'If 1, then peptide abundances are forced to be based on the maximum single-scan abundance within the UMC, rather than the area under the chromatographic peak for the UMC.')
INSERT INTO [T_SP_Glossary] VALUES (21,'Min High MS/MS Score',3,13,'real',4,'Minimum Sequest score required of PMTs used in peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (21,'Min High Discriminant Score',3,14,'real',4,'Minimum Discriminant score required of PMTs used in peak matching (scale 0 to 1).')
INSERT INTO [T_SP_Glossary] VALUES (21,'Min High Peptide Prophet Prob',3,15,'real',4,'Minimum peptide prophet probability required of PMTs used in peak matching (scale 0 to 1).')
INSERT INTO [T_SP_Glossary] VALUES (21,'Min PMT Quality Score',3,16,'real',4,'Minimum Quality Score required of PMTs used in peak matching (Scale 0-2, higher value means higher quality).')
INSERT INTO [T_SP_Glossary] VALUES (21,'Min SLiC Score',3,17,'real',4,'Minimum SLIC score required of PMTs used in peak matching (scale 0 to 1).')
INSERT INTO [T_SP_Glossary] VALUES (21,'Min Del SLiC Score',3,18,'real',4,'Minimum Del SLIC score required of PMTs used in peak matching (scale 0 to 1).')
INSERT INTO [T_SP_Glossary] VALUES (21,'Min Peptide Length',3,19,'tinyint',1,'Minimum number of amino acids per peptide required of PMTs used in peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (21,'Min Peptide Rep Count',3,20,'smallint',2,'Minimum number of repeat observations (replicates) required for each PMT (peptide) to be included in the report.  Ignored for Q Rollups that are not replicate-based.')
INSERT INTO [T_SP_Glossary] VALUES (21,'ORF Coverage Computation Level',3,21,'tinyint',1,'Amount of detail to include for protein (ORF) coverage.  If 0, then no protein coverage is computed.  If 1, then observed protein coverage is computed.  If 2, then both potential and observed protein coverage is computed (possibly very time consuming).')
INSERT INTO [T_SP_Glossary] VALUES (21,'Rep Norm Stats',3,22,'varchar',1024,'Summary of the normalization steps applied for replicate-based Q Rollups.')
INSERT INTO [T_SP_Glossary] VALUES (21,'Quantitation State ID',3,23,'tinyint',1,'Processing state for the Q Rollup; 1=New, 2=Processing, 3=Success, 4=Failure, 5=Superseded.')
INSERT INTO [T_SP_Glossary] VALUES (21,'State',3,24,'varchar',50,'Processing state for the Q Rollup.')
INSERT INTO [T_SP_Glossary] VALUES (21,'Last Affected',3,25,'datetime',8,'Date that the Q Rollup was last updated.')
INSERT INTO [T_SP_Glossary] VALUES (22,'message',2,1,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (22,'Column_Name',3,1,'varchar',255,'Name of the output column.')
INSERT INTO [T_SP_Glossary] VALUES (22,'Data_Type',3,2,'varchar',255,'Data type of the output column.')
INSERT INTO [T_SP_Glossary] VALUES (22,'Description',3,3,'varchar',255,'Column description.')
INSERT INTO [T_SP_Glossary] VALUES (23,'message',2,1,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (23,'Column_Name',3,1,'varchar',255,'Name of the output column.')
INSERT INTO [T_SP_Glossary] VALUES (23,'Data_Type',3,2,'varchar',255,'Data type of the output column.')
INSERT INTO [T_SP_Glossary] VALUES (23,'Description',3,3,'varchar',255,'Column description.')
INSERT INTO [T_SP_Glossary] VALUES (24,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (24,'outputColumnNameList',1,2,'varchar',2048,'Comma separated list of column names to limit the output to. If blank, then all columns are included.')
INSERT INTO [T_SP_Glossary] VALUES (24,'criteriaSql',1,3,'varchar',6000,'Sql "Where clause compatible" text for filtering the ResultSet.  For example: "Protein_Name Like ''DR2%'' And (MSMS_High_Normalized_Score >= 5 Or MSMS_Observation_Count >= 10)".  Although this parameter can contain Protein_Name criteria, it is better to filter for Proteins using the @Proteins parameter.')
INSERT INTO [T_SP_Glossary] VALUES (24,'returnRowCount',1,4,'varchar',32,'Set to True to return the row count, false to return the data.')
INSERT INTO [T_SP_Glossary] VALUES (24,'pepIdentMethod',1,5,'varchar',32,'Identification method to use for returning results.  DBSearch(MS/MS-LCQ) or UMCPeakMatch(MS-FTICR)')
INSERT INTO [T_SP_Glossary] VALUES (24,'Experiments',1,6,'varchar',7000,'Comma separated list of experiments to filter on or list of experiment match criteria containing a wildcard character (%) to filter on.  Names do not need single quotes around them; see @Proteins parameter for examples.')
INSERT INTO [T_SP_Glossary] VALUES (24,'Proteins',1,7,'varchar',7000,'Comma separated list of protein names to filter on or list of protein match criteria containing a wildcard character (%) to filter on.  For example: ''Protein1003, Protein1005, Protein1006'' or ''Protein100%'' or ''Protein1003, Protein1005, Protein100%''')
INSERT INTO [T_SP_Glossary] VALUES (24,'maximumRowCount',1,8,'varchar',32,'Maximum number of rows to return.')
INSERT INTO [T_SP_Glossary] VALUES (24,'includeSupersededData',1,9,'varchar',32,'If True, then results from superseded peak matching tasks are included.  Only applicable for method UMCPeakMatch(MS-FTICR).')
INSERT INTO [T_SP_Glossary] VALUES (24,'minimumPMTQualityScore',1,10,'varchar',32,'Minimum Quality Score required of PMTs used in peak matching (Scale 0-2, higher value means higher quality).')
INSERT INTO [T_SP_Glossary] VALUES (24,'message',2,11,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (24,'Experiment',3,1,'varchar',64,'Experiment name that given PMT was identified in.')
INSERT INTO [T_SP_Glossary] VALUES (24,'Protein_Name',3,2,'varchar',128,'Protein identification text')
INSERT INTO [T_SP_Glossary] VALUES (24,'Mass_Tag_ID',3,3,'int',4,'Unique integer identification number for the given PMT (peptide).')
INSERT INTO [T_SP_Glossary] VALUES (24,'Mass_Tag_Name',3,4,'varchar',255,'Description of the location of the given PMT in the associated protein.')
INSERT INTO [T_SP_Glossary] VALUES (24,'Peptide_Sequence',3,5,'varchar',750,'Sequence of Peptide')
INSERT INTO [T_SP_Glossary] VALUES (24,'Peptide_Monoisotopic_Mass',3,6,'float',8,'Monoisotopic Mass of Peptide')
INSERT INTO [T_SP_Glossary] VALUES (24,'MSMS_Observation_Count',3,7,'int',4,'Number of filter passing MSMS observations for the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (24,'MSMS_High_Normalized_Score',3,8,'real',4,'Highest cross correlational value (XCorr) of the MSMS observations for the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (24,'MSMS_High_Discriminant_Score',3,9,'real',4,'Highest discriminant score computed for the MSMS observations for the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (24,'Mod_Count',3,10,'int',4,'Number of modified amino acids in the peptide sequence')
INSERT INTO [T_SP_Glossary] VALUES (24,'Mod_Description',3,11,'varchar',2048,'Type of modifications on the amino acids of the peptide sequence for the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (24,'PMT_Quality_Score',3,12,'numeric',5,'Minimum Quality Score required for PMT match (Scale 0-2, higher value means higher quality).')
INSERT INTO [T_SP_Glossary] VALUES (24,'Cleavage_State_Name',3,13,'varchar',50,'The enzymatic cleavage state for the given PMT, in the context of the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (24,'Residue_Start',3,14,'int',4,'Position in protein of peptide N-term by amino acid count')
INSERT INTO [T_SP_Glossary] VALUES (24,'Residue_End',3,15,'int',4,'Position in protein of peptide C-term by amino acid count')
INSERT INTO [T_SP_Glossary] VALUES (24,'Dataset_Count',3,16,'int',4,'Number of datasets (for this Q Rollup) in which the given PMT was observed.')
INSERT INTO [T_SP_Glossary] VALUES (24,'Job_Count',3,17,'int',4,'Number of MS/MS analyses that the given PMT was observed in.')
INSERT INTO [T_SP_Glossary] VALUES (25,'MTDBName',1,1,'varchar',128,'Name of the mass tag database from which to obtain the desired list of items. Only used if @PickerName is ExperimentList, ProteinList, or QRSummary')
INSERT INTO [T_SP_Glossary] VALUES (25,'PickerName',1,2,'varchar',128,'Picker type for which items should be returned.  Can be: MTDBNameList, PTDBNameList, ExperimentList, ProteinList, OutputColumnsForGetMassTags, OutputColumnsForGetAllProteins, OutputColumnsForProteinCrosstab, OutputColumnsForPeptideCrosstab, or QRSummary')
INSERT INTO [T_SP_Glossary] VALUES (25,'pepIdentMethod',1,3,'varchar',32,'Identification method to use for returning results.  DBSearch(MS/MS-LCQ) or UMCPeakMatch(MS-FTICR)')
INSERT INTO [T_SP_Glossary] VALUES (25,'message',2,4,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (26,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (26,'outputColumnNameList',1,2,'varchar',2048,'Comma separated list of column names to limit the output to. If blank, then all columns are included.')
INSERT INTO [T_SP_Glossary] VALUES (26,'criteriaSql',1,3,'varchar',6000,'Sql "Where clause compatible" text for filtering the ResultSet.  For example: "Mass_Tag_Count >= 5 Or Dataset_Count >= 3".  Although this parameter can contain Protein_Name criteria, it is better to filter for Proteins using the @Proteins parameter')
INSERT INTO [T_SP_Glossary] VALUES (26,'returnRowCount',1,4,'varchar',32,'Set to True to return the row count, false to return the data.')
INSERT INTO [T_SP_Glossary] VALUES (26,'pepIdentMethod',1,5,'varchar',32,'Identification method to use for returning results.  DBSearch(MS/MS-LCQ) or UMCPeakMatch(MS-FTICR)')
INSERT INTO [T_SP_Glossary] VALUES (26,'Experiments',1,6,'varchar',7000,'Comma separated list of experiments to filter on or list of experiment match criteria containing a wildcard character (%) to filter on.  Names do not need single quotes around them; see @Proteins parameter for examples.')
INSERT INTO [T_SP_Glossary] VALUES (26,'Proteins',1,7,'varchar',7000,'Comma separated list of protein names to filter on or list of protein match criteria containing a wildcard character (%) to filter on.  For example: ''Protein1003, Protein1005, Protein1006'' or ''Protein100%'' or ''Protein1003, Protein1005, Protein100%''')
INSERT INTO [T_SP_Glossary] VALUES (26,'maximumRowCount',1,8,'varchar',32,'Maximum number of rows to return.')
INSERT INTO [T_SP_Glossary] VALUES (26,'includeSupersededData',1,9,'varchar',32,'If True, then results from superseded peak matching tasks are included.  Only applicable for method UMCPeakMatch(MS-FTICR).')
INSERT INTO [T_SP_Glossary] VALUES (26,'minimumPMTQualityScore',1,10,'varchar',32,'Minimum Quality Score required of PMTs used in peak matching (Scale 0-2, higher value means higher quality).')
INSERT INTO [T_SP_Glossary] VALUES (26,'message',2,11,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (26,'Experiment',3,1,'varchar',64,'Experiment name that the given protein was identified in.')
INSERT INTO [T_SP_Glossary] VALUES (26,'Protein_Name',3,2,'varchar',128,'Protein identification text')
INSERT INTO [T_SP_Glossary] VALUES (26,'Mass_Tag_Count',3,3,'int',4,'Number of mass tags seen')
INSERT INTO [T_SP_Glossary] VALUES (26,'MSMS_Observation_Count_Avg',3,4,'int',4,'Average number of filter passing MSMS observations for the peptides associated with the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (26,'MSMS_High_Normalized_Score_Avg',3,5,'decimal',5,'Average highest cross correlational value (XCorr) of the MSMS observations for the peptides associated with the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (26,'MSMS_High_Discriminant_Score_Avg',3,6,'decimal',5,'Average highest discriminant score, based on the discriminant scores for the peptides associated with the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (26,'Mod_Count_Avg',3,7,'float',8,'Average number of modified amino acids in the peptide sequences for the peptides associated with this protein.')
INSERT INTO [T_SP_Glossary] VALUES (26,'Dataset_Count_Avg',3,8,'int',4,'Average number of datasets (for this Q Rollup) in which the PMTs for the given protein were observed.')
INSERT INTO [T_SP_Glossary] VALUES (26,'Job_Count_Avg',3,9,'int',4,'Average number of MS/MS analyses in which the peptides associated with the given protein were observed.')
INSERT INTO [T_SP_Glossary] VALUES (27,'MTDBName',1,1,'varchar',128,'Database from which to obtain the Q Rollup report(s).')
INSERT INTO [T_SP_Glossary] VALUES (27,'message',2,2,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (27,'QID',3,1,'int',4,'Q Rollup report ID')
INSERT INTO [T_SP_Glossary] VALUES (27,'sel',3,2,'int',1,'Column required by the web page generator to allow the user to select Q Rollups to work with.')
INSERT INTO [T_SP_Glossary] VALUES (27,'Sample Name',3,3,'varchar',255,'Job number or sample name; Replicates and Fractions may be combined')
INSERT INTO [T_SP_Glossary] VALUES (27,'Comment',3,4,'varchar',255,'Comment for the given Q Rollup report.')
INSERT INTO [T_SP_Glossary] VALUES (27,'Results Folder Path',3,5,'varchar',255,'Location of results folder; server path')
INSERT INTO [T_SP_Glossary] VALUES (27,'Unique Mass Tag Count',3,6,'int',4,'Unique number of PMTs (peptides) identified in the given Q rollup.')
INSERT INTO [T_SP_Glossary] VALUES (27,'Comparison Mass Tag Count',3,7,'int',4,'Number of PMTs that the UMCs were compared against in the peak matching task(s) included in the given Q Rollup.  If more than one peak matching task is rolled up, then this is an average for all tasks included, though the number of PMTs used will typically be the same for all tasks included in a single rollup.')
INSERT INTO [T_SP_Glossary] VALUES (27,'Threshold % For Inclusion',3,8,'decimal',5,'Decimal value to multiply the abundance value of the most abundant peptide for each protein by when determining the cutoff to use for choosing peptides to average together to compute average protein abundances.  Typically 0.33')
INSERT INTO [T_SP_Glossary] VALUES (27,'Normalize',3,9,'tinyint',1,'If 1, then the peptide abundances are scaled to give values roughly between 0.01 and 100.    Scaling is performed using ScaledAbu = (Abu-Minimum) / (Maximum-Minimum) * 100')
INSERT INTO [T_SP_Glossary] VALUES (27,'Std Abu Min',3,10,'float',8,'Minimum value to use when scaling the peptide abundances.  Scaling is performed using ScaledAbu = (Abu-Minimum) / (Maximum-Minimum) * 100')
INSERT INTO [T_SP_Glossary] VALUES (27,'Std Abu Max',3,11,'float',8,'Maximum value to use when scaling the peptide abundances.  Scaling is performed using ScaledAbu = (Abu-Minimum) / (Maximum-Minimum) * 100')
INSERT INTO [T_SP_Glossary] VALUES (27,'Force Peak Max Abundance',3,12,'tinyint',1,'If 1, then peptide abundances are forced to be based on the maximum single-scan abundance within the UMC, rather than the area under the chromatographic peak for the UMC.')
INSERT INTO [T_SP_Glossary] VALUES (27,'Min High MS/MS Score',3,13,'real',4,'Minimum Sequest score required of PMTs used in peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (27,'Min High Discriminant Score',3,14,'real',4,'Minimum Discriminant score required of PMTs used in peak matching (scale 0 to 1).')
INSERT INTO [T_SP_Glossary] VALUES (27,'Min High Peptide Prophet Prob',3,15,'real',4,'Minimum peptide prophet probability required of PMTs used in peak matching (scale 0 to 1).')
INSERT INTO [T_SP_Glossary] VALUES (27,'Min PMT Quality Score',3,16,'real',4,'Minimum Quality Score required of PMTs used in peak matching (Scale 0-2, higher value means higher quality).')
INSERT INTO [T_SP_Glossary] VALUES (27,'Min SLiC Score',3,17,'real',4,'Minimum SLIC score required of PMTs used in peak matching (scale 0 to 1).')
INSERT INTO [T_SP_Glossary] VALUES (27,'Min Del SLiC Score',3,18,'real',4,'Minimum Del SLIC score required of PMTs used in peak matching (scale 0 to 1).')
INSERT INTO [T_SP_Glossary] VALUES (27,'Min Peptide Length',3,19,'tinyint',1,'Minimum number of amino acids per peptide required of PMTs used in peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (27,'Min Peptide Rep Count',3,20,'smallint',2,'Minimum number of repeat observations (replicates) required for each PMT (peptide) to be included in the report.  Ignored for Q Rollups that are not replicate-based.')
INSERT INTO [T_SP_Glossary] VALUES (27,'ORF Coverage Computation Level',3,21,'tinyint',1,'Amount of detail to include for protein (ORF) coverage.  If 0, then no protein coverage is computed.  If 1, then observed protein coverage is computed.  If 2, then both potential and observed protein coverage is computed (possibly very time consuming).')
INSERT INTO [T_SP_Glossary] VALUES (27,'Rep Norm Stats',3,22,'varchar',50,'Summary of the normalization steps applied for replicate-based Q Rollups.')
INSERT INTO [T_SP_Glossary] VALUES (27,'Quantitation State ID',3,23,'tinyint',1,'Processing state for the Q Rollup; 1=New, 2=Processing, 3=Success, 4=Failure, 5=Superseded.')
INSERT INTO [T_SP_Glossary] VALUES (27,'State',3,24,'varchar',50,'Processing state for the Q Rollup.')
INSERT INTO [T_SP_Glossary] VALUES (27,'Last Affected',3,25,'datetime',8,'Date that the Q Rollup was last updated.')
INSERT INTO [T_SP_Glossary] VALUES (28,'MTDBName',1,1,'varchar',128,'Database from which to obtain the Q Rollup report(s).')
INSERT INTO [T_SP_Glossary] VALUES (28,'QuantitationID',1,2,'varchar',20,'Q Rollup report ID')
INSERT INTO [T_SP_Glossary] VALUES (28,'message',2,3,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (28,'Quantitation_ID',3,1,'int',4,'Q Rollup report ID')
INSERT INTO [T_SP_Glossary] VALUES (28,'SampleName',3,2,'varchar',255,'Description associated with the given Q Rollup report.')
INSERT INTO [T_SP_Glossary] VALUES (28,'Quantitation_State',3,3,'tinyint',1,'Processing state for the Q Rollup; 1=New, 2=Processing, 3=Success, 4=Failure, 5=Superseded.')
INSERT INTO [T_SP_Glossary] VALUES (28,'Comment',3,4,'varchar',255,'Comment for the given Q Rollup.')
INSERT INTO [T_SP_Glossary] VALUES (28,'Fraction_Highest_Abu_To_Use',3,5,'decimal',5,'Decimal value to multiply the abundance value of the most abundant peptide for each protein by when determining the cutoff to use for choosing peptides to average together to compute average protein abundances.  Typically 0.22')
INSERT INTO [T_SP_Glossary] VALUES (28,'Normalize_To_Standard_Abundances',3,6,'tinyint',1,'If 1, then the peptide abundances are scaled to give values roughly between 0.01 and 100.    Scaling is performed using ScaledAbu = (Abu-Minimum) / (Maximum-Minimum) * 100')
INSERT INTO [T_SP_Glossary] VALUES (28,'Standard_Abundance_Min',3,7,'float',8,'Minimum value to use when scaling the peptide abundances.  Scaling is performed using ScaledAbu = (Abu-Minimum) / (Maximum-Minimum) * 100')
INSERT INTO [T_SP_Glossary] VALUES (28,'Standard_Abundance_Max',3,8,'float',8,'Maximum value to use when scaling the peptide abundances.')
INSERT INTO [T_SP_Glossary] VALUES (28,'UMC_Abundance_Mode',3,9,'tinyint',1,'If 1, then peptide abundances are forced to be based on the maximum single-scan abundance within the UMC, rather than the area under the chromatographic peak for the UMC.')
INSERT INTO [T_SP_Glossary] VALUES (28,'Expression_Ratio_Mode',3,10,'tinyint',1,'If 0 then treat multiple UMCs matching the same mass tag in the same dataset as essentially one large UMC, then computing ER = Sum(Light) / Sum(Heavy).  If 1 then weight multiple ER values for same mass tag by UMC member counts.')
INSERT INTO [T_SP_Glossary] VALUES (28,'Minimum_MT_High_Normalized_Score',3,11,'decimal',5,'Minimum Sequest score required of PMTs used in peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (28,'Minimum_PMT_Quality_Score',3,12,'decimal',5,'Minimum Quality Score required of PMTs used in peak matching (Scale 0-2, higher value means higher quality).')
INSERT INTO [T_SP_Glossary] VALUES (28,'Minimum_Peptide_Length',3,13,'tinyint',1,'Minimum peptideresidue count for PMTs used in peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (28,'Minimum_Match_Score',3,14,'decimal',5,'Minimum SLiC score required for PMTs matching UMCs.')
INSERT INTO [T_SP_Glossary] VALUES (28,'Minimum_Peptide_Replicate_Count',3,15,'smallint',2,'Minimum peptideresidue count for PMTs used in peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (28,'ORF Coverage Computation Level',3,16,'tinyint',1,'Amount of detail to include for protein (ORF) coverage.  If 0, then no protein coverage is computed.  If 1, then observed protein coverage is computed.  If 2, then both potential and observed protein coverage is computed (possibly very time consuming).')
INSERT INTO [T_SP_Glossary] VALUES (28,'RepNormalization_PctSmallDataToDiscard',3,17,'tinyint',1,'Percentage of low intensity data to be discarded prior to computing the normalization factor.')
INSERT INTO [T_SP_Glossary] VALUES (28,'RepNormalization_PctLargeDataToDiscard',3,18,'tinyint',1,'Percentage of high intensity data to be discarded prior to computing the normalization factor.')
INSERT INTO [T_SP_Glossary] VALUES (28,'RepNormalization_MinimumDataPointCount',3,19,'smallint',2,'Minimum number of matching PMTs between replicates that must be present for intensity normalization to be performed.')
INSERT INTO [T_SP_Glossary] VALUES (28,'RemoveOutlierAbundancesForReplicates',3,24,'tinyint',1,'If 1, then outlier abundance values are removed for each PMT in replicate-based Q Rollups.')
INSERT INTO [T_SP_Glossary] VALUES (28,'FractionCrossReplicateAvgInRange',3,25,'decimal',5,'Decimal value to use when filtering out the outlier abundances in replicate-based Q rollups.  An initial average across replicates is computed for each peptide, then the average is multiplied by FractionCrossReplicateAvgInRange to give DistanceX.  Abundances values that are more than DistanceX away from the average are not included in the final average.')
INSERT INTO [T_SP_Glossary] VALUES (28,'AddBackExcludedMassTags',3,26,'tinyint',1,'Only applies to replicate-based rollups.  If 1, then any PMTs that get filtered out due to widely varying abundances between replicates get added back into the results output.')
INSERT INTO [T_SP_Glossary] VALUES (28,'MTMatchingUMCsCount',3,27,'int',4,'Number of UMCs in the given Q Rollup that had one or more matching PMTs.')
INSERT INTO [T_SP_Glossary] VALUES (28,'MTMatchingUMCsCountFilteredOut',3,28,'int',4,'Number of UMCs in the given Q Rollup that had a matching PMT, but were filtered out because the UMC abundance was marked as an outlier.  Only applies to replicate-based Q Rollups.')
INSERT INTO [T_SP_Glossary] VALUES (28,'UniqueMassTagCount',3,29,'int',4,'Unique number of PMTs (peptides) identified in the given Q rollup.')
INSERT INTO [T_SP_Glossary] VALUES (28,'UniqueMassTagCountFilteredOut',3,30,'int',4,'Number of UMCs in the given Q Rollup that had a matching PMT, but were filtered out because the UMC abundance was marked as an outlier.  Only applies to replicate-based Q Rollups.')
INSERT INTO [T_SP_Glossary] VALUES (28,'ReplicateNormalizationStates',3,31,'varchar',1024,'Summary of the normalization steps applied for replicate-based Q Rollups.')
INSERT INTO [T_SP_Glossary] VALUES (28,'LastAffected',3,32,'datetime',8,'Date that the Q Rollup was last updated.')
INSERT INTO [T_SP_Glossary] VALUES (31,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (31,'SourceColName',1,2,'varchar',128,'Column whose value is to be returned in the crosstab report.')
INSERT INTO [T_SP_Glossary] VALUES (31,'QuantitationIDList',1,3,'varchar',1024,'Comma separated list of Quantitation_ID report IDs to return; may contain just one value.')
INSERT INTO [T_SP_Glossary] VALUES (31,'SeparateReplicateDataIDs',1,5,'tinyint',1,'If 1, then will separate out replicate-based Q Rollups into separate columns.')
INSERT INTO [T_SP_Glossary] VALUES (31,'AggregateColName',1,6,'varchar',128,'The column whose value is to be displayed in the crosstab output.  Valid columns include MT_Abundance, ER, Mass_Error_PPM_Avg, UMC_MatchCount_Avg, SingleMT_MassTagMatchingIonCount, SingleMT_FractionScansMatchingSingleMT, ReplicateCountAvg, FractionCountAvg, TopLevelFractionCount')
INSERT INTO [T_SP_Glossary] VALUES (31,'AverageAcrossColumns',1,7,'tinyint',1,'Set 1 to include a final column in the output that is an average across all columns for the given row.  If enabled, will result in slower execution times and supports fewer total QID values due to Sql Server varchar limitations.')
INSERT INTO [T_SP_Glossary] VALUES (31,'message',2,4,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (31,'Mass_Tag_ID',3,1,'int',4,'Unique integer identification number for the given PMT (peptide).')
INSERT INTO [T_SP_Glossary] VALUES (31,'Peptide',3,2,'varchar',750,'Sequence of the PMT (peptide)')
INSERT INTO [T_SP_Glossary] VALUES (31,'Mass_Tag_Mods',3,3,'varchar',2048,'Amino acid residue modifications associated with the given PMT (peptide).')
INSERT INTO [T_SP_Glossary] VALUES (32,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (32,'SourceColName',1,2,'varchar',128,'Column whose value is to be returned in the crosstab report.')
INSERT INTO [T_SP_Glossary] VALUES (32,'QuantitationIDList',1,3,'varchar',1024,'Comma separated list of Quantitation_ID report IDs to return; may contain just one value.')
INSERT INTO [T_SP_Glossary] VALUES (32,'SeparateReplicateDataIDs',1,5,'tinyint',1,'If 1, then will separate out replicate-based Q Rollups into separate columns.')
INSERT INTO [T_SP_Glossary] VALUES (32,'AggregateColName',1,6,'varchar',128,'The column whose value is to be displayed in the crosstab output.  Valid columns include Abundance_Average, ER_Average, MassTagCountUniqueObserved, MassTagCountUsedForAbundanceAvg, Full_Enzyme_Count, Full_Enzyme_No_Missed_Cleavage_Count, Partial_Enzyme_Count, ORF_Coverage_Residue_Count, ORF_Coverage_Fraction, Potential_Full_Enzyme_Count, Potential_Partial_Enzyme_Count, Potential_ORF_Coverage_Residue_Count, Potential_ORF_Coverage_Fraction, FractionScansMatchingSingleMassTag')
INSERT INTO [T_SP_Glossary] VALUES (32,'AverageAcrossColumns',1,7,'tinyint',1,'Set 1 to include a final column in the output that is an average across all columns for the given row.  If enabled, will result in slower execution times and supports fewer total QID values due to Sql Server varchar limitations.')
INSERT INTO [T_SP_Glossary] VALUES (32,'message',2,4,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (32,'Ref_ID',3,1,'int',4,'Unique integer identification number for the given protein (aka ORF or Reference).')
INSERT INTO [T_SP_Glossary] VALUES (32,'Reference',3,2,'varchar',128,'Protein identification text')
INSERT INTO [T_SP_Glossary] VALUES (32,'Protein_Description',3,3,'varchar',512,'Description for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (33,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (33,'SourceColName',1,2,'varchar',128,'Column whose value is to be returned in the crosstab report.')
INSERT INTO [T_SP_Glossary] VALUES (33,'QuantitationIDList',1,3,'varchar',1024,'Comma separated list of Quantitation_ID report IDs to return; may contain just one value.')
INSERT INTO [T_SP_Glossary] VALUES (33,'SeparateReplicateDataIDs',1,5,'tinyint',1,'If 1, then will separate out replicate-based Q Rollups into separate columns.')
INSERT INTO [T_SP_Glossary] VALUES (33,'AggregateColName',1,6,'varchar',128,'The column whose value is to be displayed in the crosstab output.  Valid columns include MT_Abundance, ER, Mass_Error_PPM_Avg, UMC_MatchCount_Avg, SingleMT_MassTagMatchingIonCount, SingleMT_FractionScansMatchingSingleMT, ReplicateCountAvg, FractionCountAvg, TopLevelFractionCount')
INSERT INTO [T_SP_Glossary] VALUES (33,'AverageAcrossColumns',1,7,'tinyint',1,'Set 1 to include a final column in the output that is an average across all columns for the given row.  If enabled, will result in slower execution times and supports fewer total QID values due to Sql Server varchar limitations.')
INSERT INTO [T_SP_Glossary] VALUES (33,'message',2,4,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (33,'Ref_ID',3,1,'int',4,'Unique integer identification number for the given protein (aka ORF or Reference).')
INSERT INTO [T_SP_Glossary] VALUES (33,'Reference',3,2,'varchar',128,'Protein identification text')
INSERT INTO [T_SP_Glossary] VALUES (33,'Protein_Description',3,3,'varchar',512,'Description for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (33,'Mass_Tag_ID',3,4,'int',4,'Unique integer identification number for the given PMT (peptide).')
INSERT INTO [T_SP_Glossary] VALUES (33,'Peptide',3,5,'varchar',750,'Sequence of the PMT (peptide)')
INSERT INTO [T_SP_Glossary] VALUES (33,'Mass_Tag_Mods',3,6,'varchar',2048,'Amino acid residue modifications associated with the given PMT (peptide).')
INSERT INTO [T_SP_Glossary] VALUES (34,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (34,'QuantitationIDList',1,2,'varchar',1024,'Comma separated list of Quantitation_ID report IDs to return; may contain just one value.')
INSERT INTO [T_SP_Glossary] VALUES (34,'SeparateReplicateDataIDs',1,3,'tinyint',1,'If 1, then will separate out replicate-based Q Rollups into separate columns.')
INSERT INTO [T_SP_Glossary] VALUES (34,'IncludeRefColumn',1,5,'tinyint',1,'If True, then deleted databases are included.')
INSERT INTO [T_SP_Glossary] VALUES (34,'VerboseColumnOutput',1,7,'tinyint',1,'')
INSERT INTO [T_SP_Glossary] VALUES (34,'message',2,4,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Description',2,6,'varchar',32,'Short description of the Q Rollups included in the output.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Sample_Name',3,1,'varchar',255,'Description associated with the given Q Rollup report.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Ref_ID',3,2,'int',4,'Unique integer identification number for the given protein (aka ORF or Reference).')
INSERT INTO [T_SP_Glossary] VALUES (34,'Reference',3,3,'varchar',128,'Protein identification text')
INSERT INTO [T_SP_Glossary] VALUES (34,'Protein_Description',3,4,'varchar',512,'Description for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Abundance_Average',3,5,'float',8,'Average protein abundance.  Computed by averaging the high abundance peptides for the given protein (typically, all peptides whose abundances are >= 33% times the most abundant peptide for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Abundance_StDev',3,6,'float',8,'Protein abundance standard deviation.')
INSERT INTO [T_SP_Glossary] VALUES (34,'SLiC_Score_Avg',3,7,'float',8,'Average Spatially Localized Confidence Score (SLiC Score).  This is the average SLiC score for the peptides that were identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Mass_Tag_Count_Unique_Observed',3,8,'int',4,'Unique number of PMTs (peptides) identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Internal_Standard_Count_Unique_Observed',3,9,'int',4,'Unique number of internal standard peptides identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Peptide_Count_Used_For_Abundance_Avg',3,10,'int',4,'Unique number of peptides whose abundance values were averaged together to compute the protein abundance value.  The column "Used For Abundance Computation" in the peptide results list will have a value of 1 for all peptides included in the averaging.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Full_Enzyme_Count',3,11,'int',4,'Number of fully tryptic PMTs identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Potential_Full_Enzyme_Count',3,12,'int',4,'Number of fully tryptic PMTs in the PMT tag database for the given protein.  This is not the number identified by LC-FTICR-MS; rather, it is the number putatively identified by LC-MS/MS and thus the total number that could possibly be identified by LC-FTICR-MS.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Full_Enzyme_No_Missed_Cleavage_Count',3,13,'int',4,'Number of fully tryptic PMTs with no missed cleavages identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Partial_Enzyme_Count',3,14,'int',4,'Number of partially tryptic PMTs identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Potential_Partial_Enzyme_Count',3,15,'int',4,'Number of partially tryptic PMTs in the PMT tag database for the given protein.  This is not the number identified by LC-FTICR-MS; rather, it is the number putatively identified by LC-MS/MS and thus the total number that could possibly be identified by LC-FTICR-MS.')
INSERT INTO [T_SP_Glossary] VALUES (34,'ORF_Coverage_Residue_Count',3,16,'int',4,'Number of residues for the given protein (ORF) that were matched, when considering all of the PMTs (peptides) that were matched for this protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Potential_Protein_Coverage_Residue_Count',3,17,'int',4,'Potential number of residues for the given protein (ORF) that could be matched, if all PMTs in the PMT tag database for the given protein were identified.  This is not the number of residues identified by LC-FTICR-MS; rather, it is the number putatively identified by LC-MS/MS and thus the total number that could possibly be identified by LC-FTICR-MS.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Protein_Coverage_Percent',3,18,'decimal',5,'Residue-based coverage (percent) for the given protein, when considering all of the PMTs (peptides) that were matched for this protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Potential_Protein_Coverage_Percent',3,19,'decimal',5,'Potential residue-based coverage (percent) for the given protein, if all PMTs in the PMT tag database for the given protein were identified.  This is not the percent coverage identified by LC-FTICR-MS; rather, it is the coverage based on the peptides putatively identified by LC-MS/MS and thus the highest coverage that could possibly be achived using LC-FTICR-MS.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Protein_Coverage_Percent_High_Abundance',3,20,'decimal',5,'Residue-based coverage (percent) for the given protein, when considering all of the high abundance PMTs (peptides) that were matched for this protein.  The high abundance peptides have a value of 1 in the "Used For Abundance Computation" column in the peptide results list.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Protein_Count_Avg',3,21,'decimal',5,'Average Protein_Count value for all PMTs (peptides) identified for the given protein.  If all of the peptides'' sequences are only present in this protein''s sequence, then Average Protein_Count is 1.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Mass_Tag_ID',3,22,'int',4,'Unique integer identification number for the given PMT (peptide).')
INSERT INTO [T_SP_Glossary] VALUES (34,'Mass_Tag_Mods',3,23,'varchar',50,'Amino acid residue modifications associated with the given PMT (peptide).')
INSERT INTO [T_SP_Glossary] VALUES (34,'MT_Abundance',3,24,'float',8,'Abundance of the PMT (peptide).  Computed using the area under the chromatographic peak for the UMC that matched the given PMT.  If the PMT was matched by several UMCs, then this is the sum of the abundances for the matching UMCs.')
INSERT INTO [T_SP_Glossary] VALUES (34,'MT_Abundance_StDev',3,25,'float',8,'Standard deviation of the PMT abundance.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Member_Count_Used_For_Abundance',3,26,'decimal',5,'Number of data points (scans) within the UMC that were summed to compute the abundance for the given UMC.')
INSERT INTO [T_SP_Glossary] VALUES (34,'MT_SLiC_Score_Avg',3,27,'float',8,'Spatially Localized Confidence Score (SLiC Score).  This score represents the uniqueness of the given PMT matching the associated UMC.  If the associated UMC only matched one PMT, then MT_SLiC_Score_Avg will be 1.  If itmatched two PMTs, but one was much closer in mass and NET than the second, then the first could have a SLiC score of 0.8 and the second a score of 0.2')
INSERT INTO [T_SP_Glossary] VALUES (34,'MT_Del_SLiC_Avg',3,28,'float',8,'Difference in SLiC score between this PMT and the highest scoring PMT matching the UMC that identified this PMT.  If this was the highest confidence PMT match for the given UMC, then MT_Del_SLiC_Avg = 0.  This value will be the average of several values if replicate results are rolled up.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Peptide',3,29,'varchar',850,'Sequence of the PMT (peptide)')
INSERT INTO [T_SP_Glossary] VALUES (34,'Monoisotopic_Mass',3,30,'float',8,'Uncharged mass of the PMT.')
INSERT INTO [T_SP_Glossary] VALUES (34,'High_MS/MS_Score_(XCorr)',3,31,'real',4,'Highest MS/MS fragmentation spectrum identification score observed for the given PMT (peptide).  This is typically the highest Sequest XCorr value observed.')
INSERT INTO [T_SP_Glossary] VALUES (34,'High_Discriminant_Score',3,32,'real',4,'Highest discriminant score computed for the given PMT (peptide).  Discriminant scores are based on LC-MS/MS observations.')
INSERT INTO [T_SP_Glossary] VALUES (34,'High_Peptide_Prophet_Probability',3,33,'real',4,'Highest peptide prophet probability computed for the given PMT (peptide).  Peptide prophet values are based on LC-MS/MS observations.')
INSERT INTO [T_SP_Glossary] VALUES (34,'PMT_Quality_Score',3,34,'decimal',5,'Rough indication of the confidence of the PMT identity based on LC-MS/MS data.  This value is typically 0, 1, or 2, with 0 being low confidence, 1 being higher, and 2 being the highest.  The confidence is based on XCorr and DelCn cutoff values that vary from database to database.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Protein_Count',3,35,'tinyint',1,'Number of proteins that the given PMT (peptide) is present in (aka protein or ORF degeneracy).  If the peptide sequence is only present in one protein''s sequence, then Protein_Count = 1.  If the peptide sequence is present in two proteins'' sequences, then Protein_Count = 2.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Cleavage_State_Name',3,36,'varchar',50,'The enzymatic cleavage state for the given PMT (peptide), in the context of the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (34,'UMC_MatchCount_Avg',3,37,'decimal',5,'Number of UMCs that matched the given PMT.  If replicate or fractionated datasets are rolled up in this Q Rollup, then this is the average of the UMC match count for each.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Scan_Minimum',3,38,'int',4,'Ending scan number of the UMCs that matched the given PMT (peptide).')
INSERT INTO [T_SP_Glossary] VALUES (34,'Scan_Maximum',3,39,'int',4,'Ending scan number of the UMCs that matched the given PMT (peptide).')
INSERT INTO [T_SP_Glossary] VALUES (34,'NET_Minimum',3,40,'decimal',5,'Minimum NET for the UMC matching this PMT.  If only one dataset is included in the rollup, then NET_Minimum will be the same as NET_Maximum.  If more than one dataset is rolled up, then this is the minimum NET of all UMCs that matched the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (34,'NET_Maximum',3,41,'decimal',5,'Maximum NET for the UMC matching this PMT.  If only one dataset is included in the rollup, then NET_Maximum will be the same as NET_Minimum.  If more than one dataset is rolled up, then this is the maximum NET of all UMCs that matched the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Charge_Basis_Avg',3,42,'decimal',5,'The primary charge state associated with the UMC that matched the given PMT.  If several UMCs led to this identification, then this is the average of the primary charge states for each.  If replicate or fractionated datasets are rolled up in this Q Rollup, then this is the average of the primary charge states for each.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Charge_State_Min',3,43,'tinyint',1,'The minimum charge state associated with the UMC(s) that matched the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Charge_State_Max',3,44,'tinyint',1,'The maximum charge state associated with the UMC(s) that matched the given PMT.')
INSERT INTO [T_SP_Glossary] VALUES (34,'MT_Mass_Error_PPM_Avg',3,45,'decimal',5,'Mass difference, in ppm, between the UMC''s median mass and the PMT''s theoretical monoisotopic mass.  This value will be the average of several values if replicate results are rolled up.')
INSERT INTO [T_SP_Glossary] VALUES (34,'NET_Error_Obs_Avg',3,46,'decimal',5,'NET difference between the UMC''s median NET and the PMT''s observed NET.  This value will be the average of several values if replicate results are rolled up.')
INSERT INTO [T_SP_Glossary] VALUES (34,'NET_Error_Pred_Avg',3,47,'decimal',5,'NET difference between the UMC''s median NET and the PMT''s predicted NET.  The predicted NET is different than the observed NET for a PMT since the observed NET is the average observed elution time for the peptide while the predicted NET is the elution time predicted by a trained prediction model.  This value will be the average of several values if replicate results are rolled up.')
INSERT INTO [T_SP_Glossary] VALUES (34,'Used_For_Abundance_Computation',3,48,'tinyint',1,'Will be 1 if the given PMT (peptide) was included in the group of PMTs whose abundance values were averaged together to compute the protein abundance value for the protein associated with this PMT.')
INSERT INTO [T_SP_Glossary] VALUES (35,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (35,'QuantitationIDList',1,2,'varchar',1024,'Comma separated list of Quantitation_ID report IDs to return; may contain just one value.')
INSERT INTO [T_SP_Glossary] VALUES (35,'SeparateReplicateDataIDs',1,3,'tinyint',1,'If 1, then will separate out replicate-based Q Rollups into separate columns.')
INSERT INTO [T_SP_Glossary] VALUES (35,'ReplicateCountAvgMinimum',1,5,'decimal',5,'Minimum average replicate count value to require for proteins returned.  If the Q rollup does not contain replicate rollups, then this value is ignored.  The average replicate count is an average of the number of replicates in which each peptide for the given protein was observed.  Setting ReplicateCountAvgMinimum to a value >1 for replicate rollups will have the effect of filtering out lower quality protein identifications.')
INSERT INTO [T_SP_Glossary] VALUES (35,'VerboseColumnOutput',1,7,'tinyint',1,'')
INSERT INTO [T_SP_Glossary] VALUES (35,'message',2,4,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Description',2,6,'varchar',32,'Short description of the Q Rollups included in the output.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Sample_Name',3,1,'varchar',255,'Description associated with the given Q Rollup report.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Ref_ID',3,2,'int',4,'Unique integer identification number for the given protein (aka ORF or Reference).')
INSERT INTO [T_SP_Glossary] VALUES (35,'Reference',3,3,'varchar',128,'Protein identification text')
INSERT INTO [T_SP_Glossary] VALUES (35,'Protein_Description',3,4,'varchar',512,'Description for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Abundance_Average',3,5,'float',8,'Average protein abundance.  Computed by averaging the high abundance peptides for the given protein (typically, all peptides whose abundances are >= 33% times the most abundant peptide for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Abundance_StDev',3,6,'float',8,'Protein abundance standard deviation.')
INSERT INTO [T_SP_Glossary] VALUES (35,'SLiC_Score_Avg',3,7,'float',8,'Average Spatially Localized Confidence Score (SLiC Score).  This is the average SLiC score for the peptides that were identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Mass_Tag_Count_Unique_Observed',3,8,'int',4,'Unique number of PMTs (peptides) identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Internal_Standard_Count_Unique_Observed',3,9,'int',4,'Unique number of internal standard peptides identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Peptide_Count_Used_For_Abundance_Avg',3,10,'int',4,'Unique number of peptides whose abundance values were averaged together to compute the protein abundance value.  The column "Used For Abundance Computation" in the peptide results list will have a value of 1 for all peptides included in the averaging.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Full_Enzyme_Count',3,11,'int',4,'Number of fully tryptic PMTs identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Potential_Full_Enzyme_Count',3,12,'int',4,'Number of fully tryptic PMTs in the PMT tag database for the given protein.  This is not the number identified by LC-FTICR-MS; rather, it is the number putatively identified by LC-MS/MS and thus the total number that could possibly be identified by LC-FTICR-MS.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Full_Enzyme_No_Missed_Cleavage_Count',3,13,'int',4,'Number of fully tryptic PMTs with no missed cleavages identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Partial_Enzyme_Count',3,14,'int',4,'Number of partially tryptic PMTs identified for the given protein.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Potential_Partial_Enzyme_Count',3,15,'int',4,'Number of partially tryptic PMTs in the PMT tag database for the given protein.  This is not the number identified by LC-FTICR-MS; rather, it is the number putatively identified by LC-MS/MS and thus the total number that could possibly be identified by LC-FTICR-MS.')
INSERT INTO [T_SP_Glossary] VALUES (35,'ORF_Coverage_Residue_Count',3,16,'int',4,'Number of residues for the given protein (ORF) that were matched, when considering all of the PMTs (peptides) that were matched for this protein.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Potential_Protein_Coverage_Residue_Count',3,17,'int',4,'Potential number of residues for the given protein (ORF) that could be matched, if all PMTs in the PMT tag database for the given protein were identified.  This is not the number of residues identified by LC-FTICR-MS; rather, it is the number putatively identified by LC-MS/MS and thus the total number that could possibly be identified by LC-FTICR-MS.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Protein_Coverage_Percent',3,18,'decimal',5,'Residue-based coverage (percent) for the given protein, when considering all of the PMTs (peptides) that were matched for this protein.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Potential_Protein_Coverage_Percent',3,19,'decimal',5,'Potential residue-based coverage (percent) for the given protein, if all PMTs in the PMT tag database for the given protein were identified.  This is not the percent coverage identified by LC-FTICR-MS; rather, it is the coverage based on the peptides putatively identified by LC-MS/MS and thus the highest coverage that could possibly be achived using LC-FTICR-MS.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Protein_Coverage_Percent_High_Abundance',3,20,'decimal',5,'Residue-based coverage (percent) for the given protein, when considering all of the high abundance PMTs (peptides) that were matched for this protein.  The high abundance peptides have a value of 1 in the "Used For Abundance Computation" column in the peptide results list.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Protein_Count_Avg',3,21,'decimal',5,'Average Protein_Count value for all PMTs (peptides) identified for the given protein.  If all of the peptides'' sequences are only present in this protein''s sequence, then Average Protein_Count is 1.')
INSERT INTO [T_SP_Glossary] VALUES (35,'Mono_Mass_KDa',3,22,'float',8,'Uncharged mass of the protein.')
INSERT INTO [T_SP_Glossary] VALUES (36,'MTDBName',1,1,'varchar',128,'Database to obtain results from.')
INSERT INTO [T_SP_Glossary] VALUES (36,'QuantitationIDList',1,2,'varchar',1024,'Comma separated list of Quantitation_ID report IDs to return; may contain just one value.')
INSERT INTO [T_SP_Glossary] VALUES (36,'VerboseColumnOutput',1,4,'tinyint',1,'')
INSERT INTO [T_SP_Glossary] VALUES (36,'message',2,3,'varchar',512,'Output message; will contain a description of any error that occurred.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Quantitation ID',3,1,'int',4,'Q Rollup report ID')
INSERT INTO [T_SP_Glossary] VALUES (36,'Sample Name',3,2,'varchar',255,'Description associated with the given Q Rollup report.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Comment',3,3,'varchar',255,'Comment for the given Q Rollup.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Experiments',3,4,'varchar',1024,'Experiments contained in the peak matching tasks associated with the given Q Rollup.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Jobs',3,5,'varchar',1024,'List of jobs included in rollup')
INSERT INTO [T_SP_Glossary] VALUES (36,'Results Folder Path',3,6,'varchar',255,'Location of folder containg the graphics and chromatograms of the peak matching results.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Fraction Highest Abu To Use',3,7,'decimal',5,'Decimal value to multiply the abundance value of the most abundant peptide for each protein by when determining the cutoff to use for choosing peptides to average together to compute average protein abundances.  Typically 0.33')
INSERT INTO [T_SP_Glossary] VALUES (36,'Feature (UMC) Count',3,8,'int',4,'Number of features (UMCs) observed in the dataset used for peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Feature Count With Hits',3,9,'int',4,'Number of features (UMCs) in the given Q rollup that had one or more matching PMT tags.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Unique PMT Tag Count Matched',3,10,'int',4,'Unique number of PMT tags (peptides) identified in the given Q rollup.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Unique Internal Standard Count Matched',3,11,'int',4,'Unique number of internal standard peptides identified in the given Q rollup.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Comparison PMT Tag Count',3,12,'int',4,'Number of PMT tags (peptides) that the UMCs were compared against in the peak matching task(s) included in the given Q Rollup.  If more than one peak matching tasks are rolled up, then this is an average for all tasks included, though the number of PMTs used will typically be the same for all tasks included in a single rollup.')
INSERT INTO [T_SP_Glossary] VALUES (36,'MD UMC TolerancePPM',3,13,'numeric',5,'Tolerance used when grouping data points into UMCs in the dataset used for peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (36,'MD NetAdj NET Min',3,14,'numeric',5,'Minimum NET value in the dataset used for peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (36,'MD NetAdj NET Max',3,15,'numeric',5,'Maximum NET value in the dataset used for peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (36,'MD MMA TolerancePPM',3,16,'numeric',5,'Mass tolerance (in ppm) used during peak matching when matching UMCs to PMTs.')
INSERT INTO [T_SP_Glossary] VALUES (36,'MD NET Tolerance',3,17,'numeric',5,'Normalized elution time tolerance used during peak matching when matching UMCs to PMTs.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Refine Mass Cal PPMShift',3,18,'numeric',5,'Mass correction factor applied to the UMC masses during peak matching to correct for systematic calibration error in the dataset.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Total_Scans_Avg',3,19,'int',4,'Average number of scans in which peptide was seen')
INSERT INTO [T_SP_Glossary] VALUES (36,'Scan_Start',3,20,'int',4,'Initial scan number in the dataset used for peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (36,'Scan_End',3,21,'int',4,'Final scan number in the dataset used for peak matching.')
INSERT INTO [T_SP_Glossary] VALUES (36,'ReplicateNormalizationStats',3,22,'varchar',1024,'Summary of the normalization steps applied for replicate-based Q Rollups.')
INSERT INTO [T_SP_Glossary] VALUES (37,'DBName',1,1,'varchar',128,'')
INSERT INTO [T_SP_Glossary] VALUES (37,'DBType',2,2,'tinyint',1,'')
INSERT INTO [T_SP_Glossary] VALUES (37,'DBSchemaVersion',2,3,'real',4,'')
INSERT INTO [T_SP_Glossary] VALUES (37,'DBID',2,4,'int',4,'')
INSERT INTO [T_SP_Glossary] VALUES (37,'message',2,5,'varchar',256,'')
INSERT INTO [T_SP_Glossary] VALUES (39,'DBName',1,1,'varchar',128,'')
INSERT INTO [T_SP_Glossary] VALUES (39,'outputColumnNameList',1,2,'varchar',2048,'')
INSERT INTO [T_SP_Glossary] VALUES (39,'criteriaSql',1,3,'varchar',6000,'')
INSERT INTO [T_SP_Glossary] VALUES (39,'returnRowCount',1,4,'varchar',32,'')
INSERT INTO [T_SP_Glossary] VALUES (39,'pepIdentMethod',1,6,'varchar',32,'')
INSERT INTO [T_SP_Glossary] VALUES (39,'message',2,5,'varchar',512,'')
INSERT INTO [T_SP_Glossary] VALUES (40,'DBName',1,1,'varchar',128,'')
INSERT INTO [T_SP_Glossary] VALUES (40,'DBSchemaVersion',2,2,'real',4,'')
INSERT INTO [T_SP_Glossary] VALUES (40,'message',2,3,'varchar',256,'')
INSERT INTO [T_SP_Glossary] VALUES (41,'DBName',1,1,'varchar',128,'')
INSERT INTO [T_SP_Glossary] VALUES (41,'outputColumnNameList',1,2,'varchar',2048,'')
INSERT INTO [T_SP_Glossary] VALUES (41,'criteriaSql',1,3,'varchar',6000,'')
INSERT INTO [T_SP_Glossary] VALUES (41,'returnRowCount',1,4,'varchar',32,'')
INSERT INTO [T_SP_Glossary] VALUES (41,'message',2,5,'varchar',512,'')
